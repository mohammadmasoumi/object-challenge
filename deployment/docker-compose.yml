version: "3.6"

services:
  challenge:
    build:
      context: ../../object_challenge
      dockerfile: Dockerfile
    image: challenge
    container_name: challenge
#    command:
#      - flask manage initial
    networks:
      - backend
      - frontend
    dns:
      - 8.8.8.8
      - 4.2.2.4
    ports:
      - 5000:5000
    depends_on:
      - mongo
      - redis
  openresty:
    build:
      context: dockerfile/openresty
      dockerfile: Dockerfile
    image: openresty
    container_name: openresty
    restart: unless-stopped
    networks:
      - backend
      - frontend
    ports:
      - 80:80
      - 443:443
    depends_on:
      - mongo
      - redis
    volumes:
      - ./data/nginx:/etc/nginx/conf.d:ro
      - ./data/lua:/home/user/lua:ro
  mongo:
    image: mongo
    container_name: mongodb
    restart: unless-stopped
    env_file:
      - env_dir/mongo.env
    networks:
      - backend
    dns:
      - 8.8.8.8
      - 4.2.2.4
    ports:
      - 27017:27017
    volumes:
      - ./data/mongo/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
      - mongo-data:/data/db
  redis:
    image: redis
    container_name: redis
    restart: unless-stopped
    networks:
      - backend
    dns:
      - 8.8.8.8
      - 4.2.2.4
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  common-data:
    driver: local
    name: common-data
  mongo-data:
    driver: local
    name: mongo-data
  redis-data:
    driver: local
    name: redis-data
